version: '3.4'

services:
  asptemplate.api:
    image: ${DOCKER_REGISTRY-}asptemplateapi
    build:
      context: .
      dockerfile: AspTemplate.API/Dockerfile
    environment:
      - ConnectionStrings:AppDbContext=Host=postgres;Database=MyMedicDev;Username=postgres;Password=root;Port=5432
      - Minio:ServiceUrl=http://minio:9000
      - Minio:AccessKey=${MINIO_ACCESS_KEY}
      - Minio:SecretKey=${MINIO_SECRET_KEY}
    depends_on:
      - postgres
      - minio
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "6432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      # PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address :9001
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:
  minio-data:


networks:
  app-network:
    driver: bridge
